@charset "UTF-8";
// Animated Menu Icon
// By Konrad Rolof <info@konrad-rolof.de>
// https://www.konrad-rolof.de
// Licensed under MIT Open Source

@import "burger-settings";

// Button body shape
//
// @param {Boolean} $material-hover [true] - Set to `true` to enable Material Design hover
@mixin button-shape(
  $material-hover: true
) {
  display: block;
  width: $burger-button-width;
  height: $burger-button-height;
  margin: $burger-button-margin;
  padding: #{($burger-button-height - $burger-button-burger-height) / 2} #{($burger-button-width - $burger-button-burger-width) / 2};
  background-color: $burger-button-background;
  border: $burger-button-border;
  border-radius: 50%;
  transition: background-color $burger-button-animation-time,
    box-shadow $burger-button-animation-time $burger-button-animation-ease;
  -webkit-appearance: none;
  @if $material-hover {
    box-shadow: 0 0 2px rgba(#000000, 0.3);

    &:hover, &:active {
      box-shadow: 0 0 10px rgba(#000000, 0.5);
      background-color: saturate($burger-button-background, 10%);
    }
  }
  @else {
    &:hover, &:active {
      background-color: lighten($burger-button-background, 7%);
    }
  }
  &:focus {
    outline: none;
  }
}

// Burger icon body
@mixin burger-icon {
  display: block;
  width: $burger-button-burger-width;
  height: $burger-button-burger-height;
  position: relative;
  cursor: pointer;
}

// Basic icon line styles
@mixin burger-stripe-general {
  display: block;
  position: absolute;
  left: 0;
  width: 100%;
  height: $burger-button-line-weight;
  background-color: $burger-button-line-color;
  opacity: 1;
}

// burger animation 1
@mixin burger-animation-1 {
  transition: transform $burger-button-animation-time,
    opacity $burger-button-animation-time,
    left $burger-button-animation-time $burger-button-animation-ease;

  &:nth-child(1) {
    top: 0;

    body.open-menu & {
      top: #{($burger-button-burger-height - $burger-button-line-weight) / 2};
      transform: rotate(135deg);
    }
  }
  &:nth-child(2) {
    top: #{($burger-button-burger-height - $burger-button-line-weight) / 2};

    body.open-menu & {
      opacity: 0;
      left: -100%;
    }
  }
  &:nth-child(3) {
    top: #{$burger-button-burger-height - $burger-button-line-weight};

    body.open-menu & {
      top: #{($burger-button-burger-height - $burger-button-line-weight) / 2};
      transform: rotate(-135deg);
    }
  }
}

// burger animation 2
@mixin burger-animation-2 {
  transition: transform $burger-button-animation-time,
    width $burger-button-animation-time,
    top $burger-button-animation-time,
    left $burger-button-animation-time $burger-button-animation-ease;

  &:nth-child(1) {
    top: 0;

    body.open-menu & {
      top: #{($burger-button-burger-height - $burger-button-line-weight) / 2};
      width: 0;
      left: 50%;
    }
  }
  &:nth-child(2) {
    top: #{($burger-button-burger-height - $burger-button-line-weight) / 2};

    body.open-menu & {
      transform: rotate(45deg);
    }
  }
  &:nth-child(3) {
    top: #{($burger-button-burger-height - $burger-button-line-weight) / 2};
    body.open-menu & {
      transform: rotate(-45deg);
    }
  }
  &:nth-child(4) {
    top: #{$burger-button-burger-height - $burger-button-line-weight};

    body.open-menu & {
      top: #{($burger-button-burger-height - $burger-button-line-weight) / 2};
      width: 0;
      left: 50%;
    }
  }
}

// Complete element mixin
//
// @param {Number} $animation [1] - Switch between animation type 1 and 2
// @param {Boolean} $material-hover [true] - Set to `true` to enable Material Design hover
@mixin burger-button(
  $animation: $burger-button-animation-type,
  $material-hover: $burger-button-material-hover
) {
  .burger-button {
    @include button-shape($material-hover);
  }

  .burger-button__icon {
    @include burger-icon;
  }

  .burger-button__stripe {
    @include burger-stripe-general;
    @if($animation == 1) {
      @include burger-animation-1;
    }
    @else {
      @include burger-animation-2;
    }
  }
}
